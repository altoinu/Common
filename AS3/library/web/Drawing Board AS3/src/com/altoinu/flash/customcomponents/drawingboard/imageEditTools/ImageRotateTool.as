/** * This Source Code Form is subject to the terms of the Mozilla Public * License, v. 2.0. If a copy of the MPL was not distributed with this file, * You can obtain one at http://mozilla.org/MPL/2.0/. *  * Copyright (c) 2014 Kaoru Kawashima @altoinu http://altoinu.com */package com.altoinu.flash.customcomponents.drawingboard.imageEditTools{		import com.altoinu.flash.customcomponents.drawingboard.events.ImageRotateToolEvent;
	import com.altoinu.flash.customcomponents.drawingboard.imageEditTools.proto.Image_SelectionTool;
	
	import flash.display.DisplayObject;
	import flash.geom.Matrix;
	import flash.geom.Point;		//--------------------------------------	//  Events	//--------------------------------------		/**	 *  Dispatched when an image is rotated.	 *	 *  @eventType com.altoinu.flash.customcomponents.drawingboard.events.ImageRotateToolEvent.ROTATE	 */	[Event(name="rotate", type="com.altoinu.flash.customcomponents.drawingboard.events.ImageRotateToolEvent")]		/**	 * ImageRotateTool handles rotating selected <code>target</code> image on the drawing board.	 * 	 * <p>Optionally, you can either <code>addChild</code> a DisplayObject or extend this class so it can be used as a	 * visual reference on the stage.</p>	 *	 * @author Kaoru Kawashima	 */	public class ImageRotateTool extends Image_SelectionTool	{				//--------------------------------------------------------------------------		//		//  Constructor		//		//--------------------------------------------------------------------------				/**		 * Constructor.		 * 		 * @param selectionHighlight		 * 		 */		public function ImageRotateTool(selectionHighlight:DisplayObject = null)		{						super(selectionHighlight);					}				//--------------------------------------------------------------------------		//		//  Public methods		//		//--------------------------------------------------------------------------				/**		 * Rotates the selected item to newAngle.		 * 		 * @param newAngle Angle to rotate to in degrees.		 */		public function rotateTarget(newAngle:Number):void		{						var oldAngle:Number = target.rotation;			target.rotation = newAngle;						positionHighlight();						dispatchEvent(new ImageRotateToolEvent(ImageRotateToolEvent.ROTATE, false, false, target, newAngle - oldAngle, new Point(0, 0)));					}				/**		 * Rotates by specified amout at rotatePoint.		 * @param angleDegrees		 * @param rotatePoint		 * 		 */		public function rotateBy(angleDegrees:Number, rotatePoint:Point = null):void		{						if (rotatePoint == null)				rotatePoint = new Point(0, 0);						var m:Matrix = target.transform.matrix;			m.tx -= rotatePoint.x;			m.ty -= rotatePoint.y;			m.rotate(angleDegrees * (Math.PI / 180));			m.tx += rotatePoint.x;			m.ty += rotatePoint.y;			target.transform.matrix = m;						positionHighlight();						dispatchEvent(new ImageRotateToolEvent(ImageRotateToolEvent.ROTATE, false, false, target, angleDegrees, new Point(rotatePoint.x, rotatePoint.y)));					}			}	}